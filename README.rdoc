= adobe_connect

## Installation

Add this line to your application's Gemfile:

    gem 'adobe_connect', :git => 'git@github.com:americanhonors/adobe_connect.git' 

And then execute:

    $ bundle

## Usage
Initializer:
This can be in config/initializers/adobe_connect.rb for example
	
	AdobeConnect.configure do |config|
       config.url 		= 'https://xyz.adobeconnect.com'
       config.url_path 	= '/api/xml'
       config.username 	= 'user'
       config.password 	= 'connectpassword'
       config.account 	= 'account'
    end

To use: 

	@connect = AdobeConnect.new

This will automatically log into adobe connect web service with the default configurations in the initializer.
To instantiate with a different adobe connect account: 

	@connect = AdobeConnect.new({
		:url 		=> 'https://xyz.adobeconnect.com',
	    :url_path 	=> '/api/xml',
	    :username 	=> 'user',
	    :password 	=> 'connectpassword',
	    :account 	=> 'account',
	    :auto_login => false/true
	})

Get BREEZESESSION session id:

	@connect.sessionId

	@connect.cookieDomain

User creation:

	@connect.user_create({
	 	'email' => 'email@example.com',
	 	'description' => 'Description',
	 	'first-name' => 'First Name',
	 	'last-name' =>' Last name',
	 	'login' => 'email@example.com',
	 	'password'=>'PASSWORD',
	 	'send-email'=>0,
	 	'type'=>'live-admins'
	})

Get folders:

	folders = @connect.sco_shortcuts

Create a meeting:

	@connect.create_meeting({
    	'author-info-1' => NAME ,
    	'name' 			=> title,
    	'date-begin' 	=> Time.now.iso8601,
    	'date-end' 		=> 1.hour.from_now.iso8601,
    	'url-path' 		=> "/xyz",
    	'folder-id'		=> 123,
    	'source-sco-id'	=> 123
	})

Set meeting as public

	@connect.permissions_update({'principal-id' => 'public-access','acl-id' => sco_id, 'permission-id' => 'view-hidden' })

Add principal as host of meeting

	@connect.permissions_update({'principal-id' => principal_id,'acl-id' => sco_id, 'permission-id' => 'host' })

== Contributing to adobe_connect
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet.
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it.
* Fork the project.
* Start a feature/bugfix branch.
* Commit and push until you are happy with your contribution.
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2012 Kunmi Ayanbule. See LICENSE.txt for
further details.

